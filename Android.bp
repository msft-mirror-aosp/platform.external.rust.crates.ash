// This file is generated by cargo2android.py --config cargo2android.json.
// Do not modify this file as changes will be overridden on upgrade.



rust_defaults {
    name: "ash_test_defaults",
    crate_name: "ash",
    srcs: ["src/lib.rs"],
    cargo_env_compat: true,
    cargo_pkg_version: "0.33.2+1.2.186",
    test_suites: ["general-tests"],
    auto_gen_config: true,
    edition: "2018",
    features: [
        "default",
        "libloading",
    ],
    rustlibs: [
        "liblibloading",
    ],
}

rust_test_host {
    name: "ash_host_test_src_lib",
    defaults: ["ash_test_defaults"],
    test_options: {
        unit_test: true,
    },
}

rust_test {
    name: "ash_device_test_src_lib",
    defaults: ["ash_test_defaults"],
}

rust_defaults {
    name: "ash_test_defaults_ash",
    crate_name: "ash",
    cargo_env_compat: true,
    cargo_pkg_version: "0.33.2+1.2.186",
    test_suites: ["general-tests"],
    auto_gen_config: true,
    edition: "2018",
    features: [
        "default",
        "libloading",
    ],
    rustlibs: [
        "libash_rust",
        "liblibloading",
    ],
}

rust_test_host {
    name: "ash_host_test_tests_constant_size_arrays",
    defaults: ["ash_test_defaults_ash"],
    srcs: ["tests/constant_size_arrays.rs"],
    test_options: {
        unit_test: true,
    },
}

rust_test {
    name: "ash_device_test_tests_constant_size_arrays",
    defaults: ["ash_test_defaults_ash"],
    srcs: ["tests/constant_size_arrays.rs"],
}

rust_test_host {
    name: "ash_host_test_tests_display",
    defaults: ["ash_test_defaults_ash"],
    srcs: ["tests/display.rs"],
    test_options: {
        unit_test: true,
    },
}

rust_test {
    name: "ash_device_test_tests_display",
    defaults: ["ash_test_defaults_ash"],
    srcs: ["tests/display.rs"],
}

rust_library {
    name: "libash_rust",
    stem: "libash",
    host_supported: true,
    crate_name: "ash",
    cargo_env_compat: true,
    cargo_pkg_version: "0.33.2+1.2.186",
    srcs: ["src/lib.rs"],
    edition: "2018",
    features: [
        "default",
        "libloading",
    ],
    rustlibs: [
        "liblibloading",
    ],
}
